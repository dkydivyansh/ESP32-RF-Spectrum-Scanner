#ifndef WEBPAGES_H
#define WEBPAGES_H

#include <Arduino.h>

const char index_html[] PROGMEM = R"rawliteral(
<!doctypehtml><html lang=en><meta charset=UTF-8><meta content="width=device-width,initial-scale=1"name=viewport><title>RF Spectrum Scanner</title><script src=/plotly-rf-scanner.min.js></script><script src=/tone.js></script><style>:root{--bg-color:#121212;--surface-color:#1e1e1e;--primary-color:#ffffff;--secondary-color:#bbbbbb;--border-color:#333333;--error-color:#cf6679;--success-color:#66bb6a;--font-sans:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif;--font-mono:'Fira Code','Consolas','Monaco',monospace}html{height:100%}*{margin:0;padding:0;box-sizing:border-box}body{font-family:var(--font-sans);background-color:var(--bg-color);color:var(--secondary-color);min-height:100%;overflow-x:hidden}.container{display:flex;flex-direction:column;padding:1rem;gap:1rem;min-height:100vh}.header{text-align:left;padding-bottom:1rem;border-bottom:1px solid var(--border-color)}.header h1{color:var(--primary-color);font-size:1.5rem;font-weight:600;margin-bottom:.25rem}.header .credits{font-size:.875rem}.header .credits a{color:var(--secondary-color);text-decoration:none}.header .credits a:hover{color:var(--primary-color)}.info-note{font-size:.8rem;color:var(--secondary-color);margin-top:.5rem;padding-left:.2rem}.main-grid{display:grid;grid-template-columns:1fr;gap:1rem;flex-grow:1}@media (min-width:1024px){.main-grid{grid-template-columns:320px 1fr;grid-template-rows:auto 1fr}.status-grid{grid-column:1/-1}}.status-grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(150px,1fr));gap:1rem}.status-item{background-color:var(--surface-color);border:1px solid var(--border-color);border-radius:8px;padding:1rem}.status-item .label{font-size:.875rem;margin-bottom:.25rem;color:var(--secondary-color)}.status-item .value{font-family:var(--font-mono);font-size:1.25rem;font-weight:500;color:var(--primary-color)}.control-panel,.visualization-panel{background-color:var(--surface-color);border:1px solid var(--border-color);border-radius:8px;padding:1rem}.control-group{margin-bottom:1.5rem}.control-group:last-child{margin-bottom:0}.control-group h3{color:var(--primary-color);margin-bottom:1rem;font-size:1rem;font-weight:600;border-bottom:1px solid var(--border-color);padding-bottom:.5rem}.control-item{margin-bottom:1rem}.control-item label{display:block;margin-bottom:.5rem;font-size:.875rem}.control-item input,.control-item select{width:100%;padding:.75rem;background-color:var(--bg-color);border:1px solid var(--border-color);border-radius:6px;color:var(--primary-color);font-size:1rem}.control-item input:focus,.control-item select:focus{outline:0;border-color:var(--primary-color)}.range-container{position:relative}.range-value{position:absolute;right:0;top:0;font-family:var(--font-mono);color:var(--primary-color)}.button-grid{display:grid;grid-template-columns:1fr 1fr;gap:.5rem}.btn{padding:.75rem 1rem;border:1px solid var(--border-color);border-radius:6px;cursor:pointer;font-weight:600;transition:all .2s ease;background-color:var(--surface-color);color:var(--secondary-color)}.btn:hover{background-color:var(--primary-color);color:var(--bg-color);border-color:var(--primary-color)}.btn:disabled{opacity:.4;cursor:not-allowed;background-color:var(--surface-color);color:var(--secondary-color);border-color:var(--border-color)}.tab-container{display:flex;margin-bottom:1rem;border-bottom:1px solid var(--border-color)}.tab{flex:0 1 auto;padding:.5rem 1rem;background:0 0;border:none;border-bottom:2px solid transparent;color:var(--secondary-color);cursor:pointer;font-size:1rem;transition:all .2s ease}.tab.active{color:var(--primary-color);border-bottom-color:var(--primary-color)}.chart-container{min-height:400px;height:100%}.pulse{animation:pulse 2s infinite}@keyframes pulse{0%,100%{opacity:1}50%{opacity:.6}}.modal-overlay{position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,.7);display:none;justify-content:center;align-items:center;z-index:1000}.modal-content{background:var(--surface-color);padding:2rem;border-radius:8px;text-align:center;border:1px solid var(--border-color)}.modal-content h2{margin-bottom:1rem;color:var(--primary-color)}.modal-content p{margin-bottom:1.5rem}.modal-overlay.visible{display:flex}.toast{position:fixed;bottom:-100px;left:50%;transform:translateX(-50%);background-color:var(--surface-color);color:var(--primary-color);padding:1rem 2rem;border-radius:8px;border:1px solid var(--border-color);transition:bottom .5s ease-in-out;z-index:1001}.toast.show{bottom:20px}.toast.success{background-color:var(--success-color);color:#000}.toast.fail{background-color:var(--error-color);color:#000}</style><div class=container><header class=header><h1>RF Spectrum Scanner</h1><div class=credits>by <a href=https://dkydivyansh.com target=_blank>dkydivyansh.com</a> | GitHub: <a href=https://github.com/dkydivyansh target=_blank>@dkydivyansh</a></div><p class=info-note>Note: Diagonal patterns in the waterfall view are normal and indicate frequency-hopping signals like Bluetooth.</header><main class=main-grid><div class=status-grid><div class=status-item><div class=label>Connection</div><div class=value id=connectionStatus>...</div></div><div class=status-item><div class=label>Radio Status</div><div class=value id=scanningStatus>...</div></div><div class=status-item><div class=label>Peak Activity</div><div class=value id=peakActivity>--</div></div><div class=status-item><div class=label>Total Signals</div><div class=value id=totalSignals>0</div></div></div><aside class=control-panel><div class=control-group><h3>Presets</h3><div class=button-grid><button class=btn onclick=setPreset(event,2412,2484)>WiFi</button> <button class=btn onclick=setPreset(event,2402,2480)>Bluetooth</button> <button class=btn onclick=setPreset(event,2405,2480)>ZigBee</button> <button class=btn onclick=setPreset(event,2400,2525)>Full Band</button></div></div><div class=control-group><h3>RF Configuration</h3><div class=control-item><label for=startFreq>Start Freq (MHz)</label><input id=startFreq max=2524 min=2400 type=number></div><div class=control-item><label for=endFreq>End Freq (MHz)</label><input id=endFreq max=2525 min=2401 type=number></div><div class=control-item><label for=powerLevel>Power Level</label><select id=powerLevel><option value=0>MIN<option value=1>LOW<option value=2>HIGH<option value=3>MAX</select></div><div class=control-item><label for=dataRate>Data Rate</label><select id=dataRate><option value=0>250kbps<option value=1>1Mbps<option value=2>2Mbps</select></div></div><div class=control-group><h3>Scan Parameters</h3><div class=control-item><label for=scanSpeed>Sweep Delay (ms)</label><div class=range-container><span class=range-value id=scanSpeedValue></span><input id=scanSpeed max=50 min=0 type=range></div></div><div class=control-item><label for=sensitivity>Sensitivity</label><div class=range-container><span class=range-value id=sensitivityValue></span><input id=sensitivity max=100 min=10 type=range></div></div><div class=control-item><label for=averaging>Averaging</label><div class=range-container><span class=range-value id=averagingValue></span><input id=averaging max=10 min=0 type=range></div></div></div><div class=control-group><h3>Display</h3><div class=control-item><label for=colorscale>Waterfall Colors</label> <select id=colorscale onchange=updateColorscale(event)><option value=Viridis>Viridis<option value=Jet>Jet<option value=Hot>Hot<option value=Greys>Greys<option value=YlGnBu>YlGnBu<option value=Earth>Earth</select></div></div><div class=control-group><h3>Audio Sonification</h3><div class=button-grid><button class=btn id=startAudioBtn>Start Audio</button> <button class=btn id=stopAudioBtn disabled>Stop Audio</button></div><div class=control-item style=margin-top:1rem><label for=volumeSlider>Volume</label><div class=range-container><span class=range-value id=volumeValue>-10 dB</span> <input id=volumeSlider max=0 min=-40 type=range value=-10></div></div><div class=control-item><label for=audioThreshold>Signal Threshold</label><div class=range-container><span class=range-value id=audioThresholdValue>3</span> <input id=audioThreshold max=30 min=1 type=range value=3></div></div><div class=control-item><label for=maxTones>Max Tones</label><div class=range-container><span class=range-value id=maxTonesValue>4</span> <input id=maxTones max=10 min=1 type=range value=4></div></div></div><div class=control-group><h3>Controls</h3><div class=button-grid><button class=btn id=pauseBtn>Pause</button> <button class=btn id=resumeBtn disabled>Resume</button> <button class=btn id=clearBtn>Clear</button> <button class=btn id=resetBtn>Reset</button> <button class=btn id=reinitBtn style=grid-column:1/-1>Re-init Radio</button></div></div></aside><section class=visualization-panel><div class=tab-container><button class="tab active"onclick='showVisualization(event,"spectrum")'>Spectrum</button> <button class=tab onclick='showVisualization(event,"waterfall")'>Waterfall</button></div><div class=chart-container><div id=spectrumChart style=width:100%;height:100%></div><div id=waterfallChart style=width:100%;height:100%;display:none></div></div></section></main></div><div class=modal-overlay id=noDataModal><div class=modal-content><h2>Connection Lost</h2><p>No data received from the device. The NRF24L01 may have failed or disconnected.</p><button class=btn id=modalReinitBtn>Re-initialize</button></div></div><div class=toast id=toast></div><script>
class ProfessionalRFScanner{constructor(){this.websocket=null,this.isConnected=!1,this.isPaused=!1,this.currentView="spectrum",this.spectrumData=new Array(125).fill(0),this.maxWaterfallRows=300,this.waterfallData=new Array(this.maxWaterfallRows).fill(new Array(125).fill(null)),this.settings={},this.dataTimeout=null,this.reconnectAttempts=0,this.audioInitialized=!1,this.synth=null,this.audioLoop=null,this.isAudioPlaying=!1,this.initializeCharts(),this.initializeWebSocket(),this.attachEventListeners()}initializeCharts(){const t=Array.from({length:125},((t,e)=>2400+e)),e={plot_bgcolor:"transparent",paper_bgcolor:"transparent",font:{color:"var(--secondary-color)",family:"var(--font-sans)"},margin:{t:40,r:20,b:40,l:50},xaxis:{title:"Frequency (MHz)",gridcolor:"var(--border-color)"}};Plotly.newPlot("spectrumChart",[{x:t,y:this.spectrumData,type:"scatter",mode:"lines",line:{color:"var(--primary-color)",width:2},fill:"tonexty",fillcolor:"rgba(255, 255, 255, 0.1)"}],{...e,title:{text:"Real-time Spectrum",font:{color:"var(--primary-color)"}},yaxis:{title:"Signal Count",gridcolor:"var(--border-color)"}},{responsive:!0,displayModeBar:!1}),Plotly.newPlot("waterfallChart",[{z:this.waterfallData,x:t,type:"heatmap",colorscale:"Viridis",showscale:!0,zsmooth:"best",colorbar:{title:"Count",titleside:"right",tickfont:{color:"var(--secondary-color)"}}}],{...e,title:{text:"Waterfall Spectrogram",font:{color:"var(--primary-color)"}},yaxis:{title:"Time",showticklabels:!1}},{responsive:!0,displayModeBar:!1})}initializeWebSocket(){const t=`ws://${window.location.host}/ws`;this.websocket=new WebSocket(t),this.websocket.onopen=()=>{this.isConnected=!0,this.reconnectAttempts=0,this.updateConnectionStatus(),this.startDataTimeout()},this.websocket.onclose=()=>{this.isConnected=!1,clearTimeout(this.dataTimeout),this.handleReconnect()},this.websocket.onmessage=t=>{try{const e=JSON.parse(t.data);this.handleMessage(e)}catch(e){console.error("Error parsing message:",e,t.data)}}}handleReconnect(){this.reconnectAttempts++;const t=Math.min(1e3*Math.pow(2,this.reconnectAttempts),3e4);this.updateConnectionStatus(t),setTimeout((()=>this.initializeWebSocket()),t)}handleMessage(t){this.resetDataTimeout(),"spectrum"!==t.type||this.isPaused?"settings"===t.type?this.receiveSettings(t.settings):"reinitStatus"===t.type&&this.showToast(`Re-init ${t.status}`,t.status):(this.spectrumData=t.data,this.updateSpectrum(t.data),this.updateStatistics(t.statistics))}receiveSettings(t){this.settings=t,Object.keys(this.settings).forEach((t=>{const e=document.getElementById(t);e&&(e.value=this.settings[t],"range"===e.type&&e.dispatchEvent(new Event("input")))}))}updateSpectrum(t){document.getElementById("noDataModal").classList.remove("visible"),document.getElementById("scanningStatus").textContent=this.isPaused?"Paused":"Active",this.waterfallData.pop(),this.waterfallData.unshift(t),"spectrum"===this.currentView?Plotly.restyle("spectrumChart",{y:[t]},[0]):"waterfall"===this.currentView&&Plotly.restyle("waterfallChart",{z:[this.waterfallData]},[0])}updateStatistics(t){t&&(document.getElementById("totalSignals").textContent=t.total||0,document.getElementById("peakActivity").textContent=t.peak_value>0?`${t.peak_freq} MHz`:"--")}updateConnectionStatus(t=0){const e=document.getElementById("connectionStatus");this.isConnected?(e.textContent="Connected",e.classList.remove("pulse")):(e.textContent=`Retrying in ${Math.round(t/1e3)}s`,e.classList.add("pulse"))}attachEventListeners(){["scanSpeed","sensitivity","averaging","startFreq","endFreq","powerLevel","dataRate"].forEach((t=>{const e=document.getElementById(t);"range"===e.type&&e.addEventListener("input",(t=>this.updateRangeValue(t.target))),e.addEventListener("change",(()=>this.sendSettings()))})),["volumeSlider","audioThreshold","maxTones"].forEach((t=>{document.getElementById(t).addEventListener("input",(t=>this.updateRangeValue(t.target)))})),document.getElementById("volumeSlider").addEventListener("change",(t=>this.setVolume(t.target.value))),document.getElementById("pauseBtn").addEventListener("click",(()=>this.setPaused(!0))),document.getElementById("resumeBtn").addEventListener("click",(()=>this.setPaused(!1))),document.getElementById("clearBtn").addEventListener("click",(()=>this.sendCommand("clear"))),document.getElementById("resetBtn").addEventListener("click",(()=>this.sendCommand("reset"))),document.getElementById("startAudioBtn").addEventListener("click",(()=>this.startAudio())),document.getElementById("stopAudioBtn").addEventListener("click",(()=>this.stopAudio()));const t=()=>{this.sendCommand("reinit"),document.getElementById("noDataModal").classList.remove("visible")};document.getElementById("reinitBtn").addEventListener("click",t),document.getElementById("modalReinitBtn").addEventListener("click",t);const e=document.getElementById("startFreq"),s=document.getElementById("endFreq");e.addEventListener("change",(()=>{parseInt(e.value)>=parseInt(s.value)&&(s.value=parseInt(e.value)+1)})),s.addEventListener("change",(()=>{parseInt(s.value)<=parseInt(e.value)&&(e.value=parseInt(s.value)-1)}))}setPaused(t){this.isPaused=t,this.sendCommand(t?"pause":"resume"),document.getElementById("pauseBtn").disabled=t,document.getElementById("resumeBtn").disabled=!t,document.getElementById("scanningStatus").textContent=t?"Paused":"Active"}updateRangeValue(t){const e=t.id,s=t.value,n=document.getElementById(e.replace("Slider","")+"Value");n&&("averaging"===e?n.textContent=0==s?"Off":`${s}x`:"scanSpeed"===e?n.textContent=`${s} ms`:"sensitivity"===e?n.textContent=`${s}%`:"volumeSlider"===e?n.textContent=`${s} dB`:"audioThreshold"!==e&&"maxTones"!==e||(n.textContent=s))}sendSettings(){["startFreq","endFreq","powerLevel","dataRate","scanSpeed","sensitivity","averaging"].forEach((t=>{const e=document.getElementById(t);this.settings[t]=e.type.match(/number|range/)?parseInt(e.value):e.value})),this.websocket?.readyState===WebSocket.OPEN&&this.websocket.send(JSON.stringify({type:"settings",settings:this.settings}))}sendCommand(t){this.websocket?.readyState===WebSocket.OPEN&&this.websocket.send(JSON.stringify({type:"command",command:t}))}startDataTimeout(){this.dataTimeout=setTimeout((()=>{document.getElementById("noDataModal").classList.add("visible"),document.getElementById("scanningStatus").textContent="Failed"}),3e3)}resetDataTimeout(){clearTimeout(this.dataTimeout),this.startDataTimeout()}showToast(t,e=""){const s=document.getElementById("toast");s.textContent=t,s.className="toast show",e&&s.classList.add(e),setTimeout((()=>{s.className="toast"}),3e3)}async startAudio(){if("running"!==Tone.context.state)try{await Tone.start(),console.log("AudioContext started successfully!")}catch(t){return void console.error("Could not start AudioContext: ",t)}this.audioInitialized||(this.synth=new Tone.PolySynth(Tone.Synth,{oscillator:{type:"sine"},envelope:{attack:.01,decay:.1,sustain:.2,release:.2}}).toDestination(),this.audioInitialized=!0,this.setVolume(document.getElementById("volumeSlider").value)),this.isAudioPlaying||(this.audioLoop=new Tone.Loop((t=>{try{const e=parseInt(document.getElementById("audioThreshold").value),s=parseInt(document.getElementById("maxTones").value),n=this.findPeaks(this.spectrumData,e,s);if(n.length>0){n.map((t=>({note:this.frequencyToNote(2400+t.index),velocity:this.strengthToVelocity(t.value)}))).forEach((e=>{this.synth.triggerAttackRelease(e.note,"16n",t,e.velocity)}))}}catch(t){console.error("Error in audio loop:",t)}}),"8n").start(0),Tone.Transport.start(),this.isAudioPlaying=!0,document.getElementById("startAudioBtn").disabled=!0,document.getElementById("stopAudioBtn").disabled=!1)}stopAudio(){this.isAudioPlaying&&(Tone.Transport.stop(),this.audioLoop&&(this.audioLoop.stop(0).dispose(),this.audioLoop=null),this.synth&&this.synth.releaseAll(),this.isAudioPlaying=!1,document.getElementById("startAudioBtn").disabled=!1,document.getElementById("stopAudioBtn").disabled=!0)}setVolume(t){this.synth&&(this.synth.volume.value=t)}findPeaks(t,e,s){if(!t)return[];const n=[];for(let s=0;s<t.length;s++)t[s]>=e&&n.push({index:s,value:t[s]});return n.sort(((t,e)=>e.value-t.value)).slice(0,s)}frequencyToNote(t){const e=(t-2400)/125*60+48;return Tone.Frequency(e,"midi").toNote()}strengthToVelocity(t){const e=(t-1)/29;return Math.max(0,Math.min(1,e))}}let scanner;function setPreset(t,e,s){document.getElementById("startFreq").value=e,document.getElementById("endFreq").value=s,scanner.sendSettings()}function showVisualization(t,e){scanner.currentView=e,document.querySelectorAll(".tab").forEach((t=>t.classList.remove("active"))),t.target.classList.add("active"),document.getElementById("spectrumChart").style.display="spectrum"===e?"block":"none",document.getElementById("waterfallChart").style.display="waterfall"===e?"block":"none",window.dispatchEvent(new Event("resize"))}function updateColorscale(t){Plotly.restyle("waterfallChart",{colorscale:t.target.value})}document.addEventListener("DOMContentLoaded",(()=>{scanner=new ProfessionalRFScanner}));
</script>
)rawliteral";

#endif
